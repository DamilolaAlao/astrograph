(function(e){function n(n){for(var t,r,l=n[0],d=n[1],o=n[2],c=0,m=[];c<l.length;c++)r=l[c],a[r]&&m.push(a[r][0]),a[r]=0;for(t in d)Object.prototype.hasOwnProperty.call(d,t)&&(e[t]=d[t]);u&&u(n);while(m.length)m.shift()();return s.push.apply(s,o||[]),i()}function i(){for(var e,n=0;n<s.length;n++){for(var i=s[n],t=!0,l=1;l<i.length;l++){var d=i[l];0!==a[d]&&(t=!1)}t&&(s.splice(n--,1),e=r(r.s=i[0]))}return e}var t={},a={app:0},s=[];function r(n){if(t[n])return t[n].exports;var i=t[n]={i:n,l:!1,exports:{}};return e[n].call(i.exports,i,i.exports,r),i.l=!0,i.exports}r.m=e,r.c=t,r.d=function(e,n,i){r.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:i})},r.r=function(e){"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,n){if(1&n&&(e=r(e)),8&n)return e;if(4&n&&"object"===typeof e&&e&&e.__esModule)return e;var i=Object.create(null);if(r.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var t in e)r.d(i,t,function(n){return e[n]}.bind(null,t));return i},r.n=function(e){var n=e&&e.__esModule?function(){return e["default"]}:function(){return e};return r.d(n,"a",n),n},r.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},r.p="/";var l=window["webpackJsonp"]=window["webpackJsonp"]||[],d=l.push.bind(l);l.push=n,l=l.slice();for(var o=0;o<l.length;o++)n(l[o]);var u=d;s.push([0,"chunk-vendors"]),i()})({0:function(e,n,i){e.exports=i("56d7")},"034f":function(e,n,i){"use strict";var t=i("64a9"),a=i.n(t);a.a},"43aa":function(e,n){var i={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"id"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"AccountID"}}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"account"},arguments:[{kind:"Argument",name:{kind:"Name",value:"id"},value:{kind:"Variable",name:{kind:"Name",value:"id"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"sequenceNumber"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"thresholds"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"low"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"medium"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"high"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"masterWeight"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"flags"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"authRequired"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"authRevokable"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"authImmutable"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"ledger"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"seq"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"trustLines"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"asset"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"native"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"issuer"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"code"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"balance"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"limit"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"authorized"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"signers"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"signer"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"weight"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"data"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"value"},arguments:[],directives:[]}]}}]}}]}}],loc:{start:0,end:498}};i.loc.source={body:"query($id: AccountID!) {\n  account(id: $id) {\n    id\n    sequenceNumber\n    thresholds {\n      low\n      medium\n      high\n      masterWeight\n    }\n    flags {\n      authRequired\n      authRevokable\n      authImmutable\n    }\n    ledger {\n      seq\n    }\n    trustLines {\n      asset {\n        native\n        issuer\n        code\n      }\n      balance\n      limit\n      authorized\n    }\n    signers {\n      signer {\n        id\n      }\n      weight\n    }\n    data {\n      name\n      value\n    }\n  }\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};function t(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var i=e.type;"NamedType"===i.kind&&n.add(i.name.value)}e.selectionSet&&e.selectionSet.selections.forEach(function(e){t(e,n)}),e.variableDefinitions&&e.variableDefinitions.forEach(function(e){t(e,n)}),e.definitions&&e.definitions.forEach(function(e){t(e,n)})}var a={};(function(){i.definitions.forEach(function(e){if(e.name){var n=new Set;t(e,n),a[e.name.value]=n}})})(),e.exports=i},"56d7":function(e,n,i){"use strict";i.r(n);i("cadf"),i("551c"),i("097d");var t=i("2b0e"),a=function(){var e=this,n=e.$createElement,i=e._self._c||n;return i("div",{staticClass:"ui container",attrs:{id:"app"}},[i("p",[e._v("Let us introduce Astrograph: GraphQL interface to Stellar blockchain.")]),i("Basic"),i("Historical"),i("Subscriptions")],1)},s=[],r=function(){var e=this,n=e.$createElement,i=e._self._c||n;return i("div",{attrs:{id:"basic"}},[i("h1",{staticClass:"ui dividing header"},[e._v("Basic query")]),i("p",[e._v("\n    Let's try to fetch account current state including it's signers, data\n    entries and trust lines via GraphQL.\n  ")]),i("form",{staticClass:"ui form"},[i("div",{staticClass:"field"},[i("label",{attrs:{for:"id"}},[e._v("Account ID:")]),i("input",{directives:[{name:"model",rawName:"v-model",value:e.id,expression:"id"}],attrs:{id:"id",type:"text",placeholder:"Example: GCHDYNE7ATLJNIERZQL3D7W7S42XZKN4AK73QT7Q665Q5JJ5X6E7V5KA"},domProps:{value:e.id},on:{input:function(n){n.target.composing||(e.id=n.target.value)}}})]),i("div",{staticClass:"two fields"},[i("div",{staticClass:"field"},[i("label",{attrs:{for:"query"}},[e._v("Query:")]),i("textarea",{attrs:{readonly:"",id:"query"}},[e._v(e._s(e.query.loc.source.body))])]),i("div",{staticClass:"field"},[i("label",{attrs:{for:"result"}},[e._v("Result:")]),i("Results",{attrs:{query:e.query,variables:e.variables}})],1)])]),i("p",[e._v("\n    You can get account signers, data entries and offers and transactions\n    separately. All basic data in one place, no need to make multiple HTTP\n    queries.\n  ")])])},l=[],d=(i("9530"),function(){var e=this,n=e.$createElement,i=e._self._c||n;return i("ApolloQuery",{attrs:{query:e.query,variables:e.variables},scopedSlots:e._u([{key:"default",fn:function(n){var t=n.result,a=t.loading,s=t.error,r=t.data;return[a?i("textarea",{staticClass:"loading apollo",attrs:{readonly:"",id:"result"}},[e._v("Loading...")]):s?i("textarea",{staticClass:"error apollo",attrs:{readonly:"",id:"result"}},[e._v("An error occured")]):r?i("textarea",{staticClass:"result apollo",attrs:{readonly:"",id:"result"}},[e._v(e._s(JSON.stringify(r,null,2)))]):i("textarea",{staticClass:"no-result apollo",attrs:{readonly:"",id:"result"}},[e._v("No result :(")])]}}])})}),o=[],u={props:{query:{type:Object,required:!0},variables:{type:Object,default:{}}},name:"Results"},c=u,m=i("2877"),v=Object(m["a"])(c,d,o,!1,null,null,null);v.options.__file="Results.vue";var f=v.exports,k={name:"Basic",components:{Results:f},computed:{query:function(){return i("43aa")},variables:function(){return{id:this.id}}},data:function(){return{id:"GA2OUHQPMPY2PY7HK6D74P3ZT2OWBMJNH7SMKOHB4DZTYLFCTQANOV2J"}}},p=k,b=Object(m["a"])(p,r,l,!1,null,null,null);b.options.__file="Basic.vue";var g=b.exports,y=function(){var e=this,n=e.$createElement,i=e._self._c||n;return i("div",{attrs:{id:"historical"}},[i("h1",{staticClass:"ui dividing header"},[e._v("Historical query")]),i("p",[e._v("Let's fetch XLM payments history, with filters, blows and whistles.")]),i("form",{staticClass:"ui form"},[i("div",{staticClass:"field"},[i("label",{attrs:{for:"id"}},[e._v("Account ID:")]),i("input",{directives:[{name:"model",rawName:"v-model",value:e.id,expression:"id"}],attrs:{id:"id",type:"text",placeholder:"Example: GAXBWGH4K5AB26LFJZTPJW4Q5UEVA4GTUWBUSCHK5CHU3LBEA44V6S56"},domProps:{value:e.id},on:{input:function(n){n.target.composing||(e.id=n.target.value)}}})]),i("div",{staticClass:"two fields"},[i("div",{staticClass:"field"},[i("label",{attrs:{for:"query"}},[e._v("Query:")]),i("textarea",{attrs:{readonly:"",id:"query"}},[e._v(e._s(e.query.loc.source.body))])]),i("div",{staticClass:"field"},[i("label",{attrs:{for:"result"}},[e._v("Result:")]),i("Results",{attrs:{query:e.query,variables:e.variables}})],1)])]),i("p",[e._v("\n    You can fetch operations history, filtered by account number and kinds.\n    Every operation kind has it's own filters as well.\n  ")])])},h=[],N={name:"Historical",components:{Results:f},computed:{query:function(){return i("a2e7")},variables:function(){return{id:this.id}}},data:function(){return{id:"GAXBWGH4K5AB26LFJZTPJW4Q5UEVA4GTUWBUSCHK5CHU3LBEA44V6S56"}}},S=N,_=Object(m["a"])(S,y,h,!1,null,null,null);_.options.__file="Historical.vue";var F=_.exports,O=function(){var e=this,n=e.$createElement,i=e._self._c||n;return i("div",{attrs:{id:"historical"}},[i("h1",{staticClass:"ui dividing header"},[e._v("Real-time data subscriptions")]),i("p",[e._v("Let's see what's happening with account balances in real time.")]),i("form",{staticClass:"ui form"},[i("div",{staticClass:"two fields"},[i("div",{staticClass:"field"},[i("label",{attrs:{for:"query"}},[e._v("Query:")]),i("textarea",{attrs:{readonly:"",id:"query"}},[e._v(e._s(e.query.loc.source.body))])]),i("div",{staticClass:"field"},[i("label",{attrs:{for:"result"}},[e._v("Result:")]),i("textarea",{attrs:{readonly:"",id:"result"}},[e._v(e._s(e.result))])])])])])},q=[],E=i("acee"),A={name:"Subscriptions",mounted:function(){var e=this,n=this.$apollo.subscribe({query:E,variables:{}});n.subscribe({next:function(n){e.result=n},error:function(e){console.error(e)}})},computed:{query:function(){return E}},data:function(){return{result:""}}},w=A,C=Object(m["a"])(w,O,q,!1,null,null,null);C.options.__file="Subscriptions.vue";var D=C.exports,x={name:"app",components:{Basic:g,Historical:F,Subscriptions:D}},L=x,T=(i("034f"),Object(m["a"])(L,a,s,!1,null,null,null));T.options.__file="App.vue";var V=T.exports,j=(i("96cf"),i("3b8d"),i("cebc")),P=i("522d"),H=i("efe7");t["a"].use(P["a"]);var Q="apollo-token",R=Object({NODE_ENV:"production",BASE_URL:"/"}).VUE_APP_GRAPHQL_HTTP||"https://astrograph.evilmartians.io/",B={httpEndpoint:R,wsEndpoint:Object({NODE_ENV:"production",BASE_URL:"/"}).VUE_APP_GRAPHQL_WS||"wss://astrograph.evilmartians.io/graphql",tokenName:Q,persisting:!1,websocketsOnly:!1,ssr:!1};function G(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},n=Object(H["createApolloClient"])(Object(j["a"])({},B,e)),i=n.apolloClient,t=n.wsClient;i.wsClient=t;var a=new P["a"]({defaultClient:i,defaultOptions:{$query:{}},errorHandler:function(e){console.log("%cError","background: red; color: white; padding: 2px 4px; border-radius: 3px; font-weight: bold;",e.message)}});return a}t["a"].config.productionTip=!1,new t["a"]({apolloProvider:G(),render:function(e){return e(V)}}).$mount("#app")},"64a9":function(e,n,i){},a2e7:function(e,n){var i={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"id"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"AccountID"}}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"accountOperations"},arguments:[{kind:"Argument",name:{kind:"Name",value:"account"},value:{kind:"Variable",name:{kind:"Name",value:"id"}}},{kind:"Argument",name:{kind:"Name",value:"kinds"},value:{kind:"ListValue",values:[{kind:"EnumValue",value:"payment"}]}},{kind:"Argument",name:{kind:"Name",value:"filters"},value:{kind:"ObjectValue",fields:[{kind:"ObjectField",name:{kind:"Name",value:"payment"},value:{kind:"ObjectValue",fields:[{kind:"ObjectField",name:{kind:"Name",value:"asset"},value:{kind:"ObjectValue",fields:[{kind:"ObjectField",name:{kind:"Name",value:"code"},value:{kind:"StringValue",value:"XLM",block:!1}}]}}]}}]}},{kind:"Argument",name:{kind:"Name",value:"first"},value:{kind:"IntValue",value:"10"}},{kind:"Argument",name:{kind:"Name",value:"offset"},value:{kind:"IntValue",value:"0"}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"kind"},arguments:[],directives:[]},{kind:"InlineFragment",typeCondition:{kind:"NamedType",name:{kind:"Name",value:"PaymentOperation"}},directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"source"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"destination"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"dateTime"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"asset"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"code"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"amount"},arguments:[],directives:[]}]}}]}}]}}],loc:{start:0,end:359}};i.loc.source={body:'query($id: AccountID!) {\n  accountOperations(\n    account: $id\n    kinds: [payment]\n    filters: {\n      payment: {\n        asset: {\n          code: "XLM"\n        }\n      }\n    }\n    first: 10\n    offset: 0\n  ) {\n    kind\n\n    ... on PaymentOperation {\n      source\n      destination\n      dateTime\n      asset {\n        code\n      }\n      amount\n    }\n  }\n}\n',name:"GraphQL request",locationOffset:{line:1,column:1}};function t(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var i=e.type;"NamedType"===i.kind&&n.add(i.name.value)}e.selectionSet&&e.selectionSet.selections.forEach(function(e){t(e,n)}),e.variableDefinitions&&e.variableDefinitions.forEach(function(e){t(e,n)}),e.definitions&&e.definitions.forEach(function(e){t(e,n)})}var a={};(function(){i.definitions.forEach(function(e){if(e.name){var n=new Set;t(e,n),a[e.name.value]=n}})})(),e.exports=i},acee:function(e,n){var i={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"subscription",variableDefinitions:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"trustLine"},arguments:[{kind:"Argument",name:{kind:"Name",value:"args"},value:{kind:"ObjectValue",fields:[]}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"mutationType"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"accountID"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"values"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"balance"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"asset"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"code"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"issuer"},arguments:[],directives:[]}]}}]}}]}}]}}],loc:{start:0,end:159}};i.loc.source={body:"subscription {\n  trustLine(args: {}) {\n    mutationType\n    accountID\n    values {\n      balance\n      asset {\n        code\n        issuer\n      }\n    }\n  }\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};function t(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var i=e.type;"NamedType"===i.kind&&n.add(i.name.value)}e.selectionSet&&e.selectionSet.selections.forEach(function(e){t(e,n)}),e.variableDefinitions&&e.variableDefinitions.forEach(function(e){t(e,n)}),e.definitions&&e.definitions.forEach(function(e){t(e,n)})}var a={};(function(){i.definitions.forEach(function(e){if(e.name){var n=new Set;t(e,n),a[e.name.value]=n}})})(),e.exports=i}});
//# sourceMappingURL=app.4e41b5b9.js.map